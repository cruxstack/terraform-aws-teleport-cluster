#!/bin/bash
# shellcheck disable=SC1091,SC2002
set -e -o pipefail

TELEPORT_CONFIG_TEMPLATE_PATH=/etc/teleport.d/teleport.tmpl.yaml
TELEPORT_CONFIG_PATH=/etc/teleport.yaml

# ================================================================= function ===

get_aws_metadata() {
  REQUEST_PATH="${1}"
  IMDS_TOKEN=$(curl -m5 -sS -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 300")
  curl -m5 -sS -H "\"X-aws-ec2-metadata-token: ${IMDS_TOKEN}\"" "http://169.254.169.254/latest/${REQUEST_PATH}" 2>/dev/null
}

# =================================================================== script ===

# ------------------------------------------------------------------- config ---

if getent passwd teleport >/dev/null 2>&1 && getent group adm >/dev/null 2>&1; then
  if [ ! -d /var/lib/teleport ]; then
    mkdir -p /var/lib/teleport
  fi
  chown -R teleport:adm /var/lib/teleport
fi

source "/etc/teleport.d/conf"

echo "${TELEPORT_ROLE}" >>"/etc/teleport.d/role.${TELEPORT_ROLE}"

INSTANCE_HOSTNAME=$(get_aws_metadata "meta-data/local-hostname")
INSTANCE_PRIVATE_IP=$(get_aws_metadata "meta-data/local-ipv4")

export TELEPORT_NODENAME=${INSTANCE_HOSTNAME}
export TELEPORT_ADVERTISE_IP=${INSTANCE_PRIVATE_IP}

cat "$TELEPORT_CONFIG_TEMPLATE_PATH" | envsubst >"${TELEPORT_CONFIG_PATH}"

chmod 664 "${TELEPORT_CONFIG_PATH}"
if getent passwd teleport >/dev/null 2>&1 && getent group adm >/dev/null 2>&1; then
  chown teleport:adm ${TELEPORT_CONFIG_PATH}
fi

# ----------------------------------------------------------------- services ---

if [[ "${TELEPORT_ROLE}" == "auth" ]]; then

  systemctl enable teleport-ssm-publish-tokens.service teleport-ssm-publish-tokens.timer
  systemctl start teleport-ssm-publish-tokens.timer

  systemctl enable teleport-get-cert.service teleport-get-cert.timer
  systemctl enable teleport-renew-cert.service teleport-renew-cert.timer
  systemctl start --no-block teleport-get-cert.timer
  systemctl start --no-block teleport-renew-cert.timer

  systemctl disable teleport.service
  systemctl enable teleport-auth.service
  systemctl start --no-block teleport-auth.service

elif [[ "${TELEPORT_ROLE}" == "proxy" ]]; then

  systemctl enable teleport-check-cert.service teleport-check-cert.timer
  systemctl start --no-block teleport-check-cert.timer

  systemctl disable teleport.service
  systemctl enable teleport-proxy.service
  systemctl start --no-block teleport-proxy.service

elif [[ "${TELEPORT_ROLE}" == "node" ]]; then

  systemctl disable teleport.service
  systemctl enable teleport-node.service
  systemctl start --no-block teleport-node.service

fi
